<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="17" failed="0" total="25" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="BookLibrary-cdiTest" duration-ms="22806" started-at="2016-02-12T09:37:16Z" finished-at="2016-02-12T09:37:39Z">
    <groups>
      <group name="testNegativeDeleteAuthorWithNoBooks">
        <method signature="AuthorManagerTest.testNegativeDeleteAuthorWithNoBooks()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeDeleteAuthorWithNoBooks" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
      </group> <!-- testNegativeDeleteAuthorWithNoBooks -->
      <group name="createAuthor">
        <method signature="AuthorManagerTest.testCreateAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testCreateAuthor" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
        <method signature="AuthorManagerTest.testNegativeCreateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeCreateAuthor" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
      </group> <!-- createAuthor -->
      <group name="updateAuthor">
        <method signature="AuthorManagerTest.testDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testDeleteAuthor" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
        <method signature="AuthorManagerTest.testNegativeDeleteAuthor(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeDeleteAuthor" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
        <method signature="AuthorManagerTest.testBulkDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testBulkDeleteAuthor" class="com.softserveinc.booklibrary.test.manager.AuthorManagerTest"/>
      </group> <!-- updateAuthor -->
    </groups>
    <test name="facades" duration-ms="20077" started-at="2016-02-12T09:37:16Z" finished-at="2016-02-12T09:37:36Z">
      <class name="com.softserveinc.model.persist.facade.BookFacadeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="setUp" is-config="true" duration-ms="5208" started-at="2016-02-12T11:37:27Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFindBookByISNBN()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="testFindBookByISNBN" duration-ms="8" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindBookByISNBN -->
        <test-method status="PASS" signature="testFindBookByName()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="testFindBookByName" duration-ms="8" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindBookByName -->
        <test-method status="PASS" signature="testFindBooksByAuthor()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="testFindBooksByAuthor" duration-ms="63" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindBooksByAuthor -->
        <test-method status="PASS" signature="testFindCountBooks()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="testFindCountBooks" duration-ms="3" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCountBooks -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.softserveinc.model.persist.facade.BookFacadeTest@50911e16]" name="tearDown" is-config="true" duration-ms="92" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.softserveinc.model.persist.facade.BookFacadeTest -->
      <class name="com.softserveinc.model.persist.facade.AuthorFacadeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="setUp" is-config="true" duration-ms="9746" started-at="2016-02-12T11:37:16Z" finished-at="2016-02-12T11:37:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFindAllAuthorsByBook()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="testFindAllAuthorsByBook" duration-ms="204" started-at="2016-02-12T11:37:26Z" finished-at="2016-02-12T11:37:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllAuthorsByBook -->
        <test-method status="PASS" signature="testFindAuthorByFullName()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="testFindAuthorByFullName" duration-ms="5" started-at="2016-02-12T11:37:26Z" finished-at="2016-02-12T11:37:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAuthorByFullName -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="tearDown" is-config="true" duration-ms="180" started-at="2016-02-12T11:37:26Z" finished-at="2016-02-12T11:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.softserveinc.model.persist.facade.AuthorFacadeTest -->
      <class name="com.softserveinc.model.persist.facade.ReviewFacadeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.softserveinc.model.persist.facade.ReviewFacadeTest@674e5fac]" name="setUp" is-config="true" duration-ms="4391" started-at="2016-02-12T11:37:32Z" finished-at="2016-02-12T11:37:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFindAllReviewsByCommenter()[pri:0, instance:com.softserveinc.model.persist.facade.ReviewFacadeTest@674e5fac]" name="testFindAllReviewsByCommenter" duration-ms="51" started-at="2016-02-12T11:37:36Z" finished-at="2016-02-12T11:37:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllReviewsByCommenter -->
        <test-method status="PASS" signature="testFindAverageRatingForBook()[pri:0, instance:com.softserveinc.model.persist.facade.ReviewFacadeTest@674e5fac]" name="testFindAverageRatingForBook" duration-ms="11" started-at="2016-02-12T11:37:36Z" finished-at="2016-02-12T11:37:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAverageRatingForBook -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.softserveinc.model.persist.facade.ReviewFacadeTest@674e5fac]" name="tearDown" is-config="true" duration-ms="91" started-at="2016-02-12T11:37:36Z" finished-at="2016-02-12T11:37:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.softserveinc.model.persist.facade.ReviewFacadeTest -->
    </test> <!-- facades -->
    <test name="managers" duration-ms="2718" started-at="2016-02-12T09:37:36Z" finished-at="2016-02-12T09:37:39Z">
      <class name="com.softserveinc.model.persist.facade.AuthorFacadeTest">
        <test-method status="PASS" signature="getRemoteBeans()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="getRemoteBeans" is-config="true" duration-ms="5165" started-at="2016-02-12T11:37:11Z" finished-at="2016-02-12T11:37:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRemoteBeans -->
        <test-method status="PASS" signature="arquillianBeforeSuite()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeSuite" is-config="true" duration-ms="273" started-at="2016-02-12T11:37:16Z" finished-at="2016-02-12T11:37:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeSuite -->
        <test-method status="PASS" signature="arquillianAfterSuite()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterSuite" is-config="true" duration-ms="11" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterSuite -->
        <test-method status="PASS" signature="closeEJBSession()[pri:0, instance:com.softserveinc.model.persist.facade.AuthorFacadeTest@44e00985]" name="closeEJBSession" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeEJBSession -->
      </class> <!-- com.softserveinc.model.persist.facade.AuthorFacadeTest -->
      <class name="com.softserveinc.booklibrary.test.manager.BookManagerTest">
        <test-method status="FAIL" signature="arquillianBeforeClass()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:36Z" finished-at="2016-02-12T11:37:36Z">
          <exception class="org.jboss.arquillian.container.spi.client.container.DeploymentException">
            <message>
              <![CDATA[Cannot deploy: test.war]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.arquillian.container.spi.client.container.DeploymentException: Cannot deploy: test.war
	at org.jboss.as.arquillian.container.ArchiveDeployer.deployInternal(ArchiveDeployer.java:83)
	at org.jboss.as.arquillian.container.ArchiveDeployer.deployInternal(ArchiveDeployer.java:64)
	at org.jboss.as.arquillian.container.ArchiveDeployer.deploy(ArchiveDeployer.java:46)
	at org.jboss.as.arquillian.container.CommonDeployableContainer.deploy(CommonDeployableContainer.java:146)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController$3.call(ContainerDeployController.java:161)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController$3.call(ContainerDeployController.java:128)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController.executeOperation(ContainerDeployController.java:271)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController.deploy(ContainerDeployController.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.container.impl.client.ContainerDeploymentContextHandler.createDeploymentContext(ContainerDeploymentContextHandler.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.container.impl.client.ContainerDeploymentContextHandler.createContainerContext(ContainerDeploymentContextHandler.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.container.impl.client.container.DeploymentExceptionHandler.verifyExpectedExceptionDuringDeploy(DeploymentExceptionHandler.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:115)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController$1.perform(ContainerDeployController.java:95)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController$1.perform(ContainerDeployController.java:80)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController.forEachDeployment(ContainerDeployController.java:263)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController.forEachManagedDeployment(ContainerDeployController.java:239)
	at org.jboss.arquillian.container.impl.client.container.ContainerDeployController.deployManaged(ContainerDeployController.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:115)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.client.ContainerEventController.execute(ContainerEventController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:115)
	at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.beforeClass(EventTestRunnerAdaptor.java:80)
	at org.jboss.arquillian.testng.Arquillian.arquillianBeforeClass(Arquillian.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
Caused by: javax.security.sasl.SaslException: Authentication failed: all available authentication mechanisms failed:
   JBOSS-LOCAL-USER: Server rejected authentication
   DIGEST-MD5: Server rejected authentication
	at org.jboss.remoting3.remote.ClientConnectionOpenListener.allMechanismsFailed(ClientConnectionOpenListener.java:114)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:389)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:241)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.channels.TranslatingSuspendableChannel.handleReadable(TranslatingSuspendableChannel.java:199)
	at org.xnio.channels.TranslatingSuspendableChannel$1.handleEvent(TranslatingSuspendableChannel.java:113)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.ChannelListeners$DelegatingChannelListener.handleEvent(ChannelListeners.java:1092)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:88)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:559)
	at ...asynchronous invocation...(Unknown Source)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:294)
	at org.jboss.remoting3.EndpointImpl.doConnect(EndpointImpl.java:275)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:379)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:367)
	at org.jboss.as.protocol.ProtocolConnectionUtils.connect(ProtocolConnectionUtils.java:78)
	at org.jboss.as.protocol.ProtocolConnectionUtils.connectSync(ProtocolConnectionUtils.java:109)
	at org.jboss.as.protocol.ProtocolConnectionManager$EstablishingConnection.connect(ProtocolConnectionManager.java:256)
	at org.jboss.as.protocol.ProtocolConnectionManager.connect(ProtocolConnectionManager.java:70)
	at org.jboss.as.protocol.mgmt.FutureManagementChannel$Establishing.getChannel(FutureManagementChannel.java:204)
	at org.jboss.as.controller.client.impl.RemotingModelControllerClient.getOrCreateChannel(RemotingModelControllerClient.java:148)
	at org.jboss.as.controller.client.impl.RemotingModelControllerClient$1.getChannel(RemotingModelControllerClient.java:67)
	at org.jboss.as.protocol.mgmt.ManagementChannelHandler.executeRequest(ManagementChannelHandler.java:117)
	at org.jboss.as.protocol.mgmt.ManagementChannelHandler.executeRequest(ManagementChannelHandler.java:92)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.executeRequest(AbstractModelControllerClient.java:236)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.execute(AbstractModelControllerClient.java:141)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.executeAsync(AbstractModelControllerClient.java:101)
	at org.jboss.as.controller.client.helpers.standalone.impl.ModelControllerClientServerDeploymentManager.executeOperation(ModelControllerClientServerDeploymentManager.java:50)
	at org.jboss.as.controller.client.helpers.standalone.impl.AbstractServerDeploymentManager.execute(AbstractServerDeploymentManager.java:79)
	at org.jboss.as.controller.client.helpers.standalone.ServerDeploymentHelper.deploy(ServerDeploymentHelper.java:54)
	at org.jboss.as.arquillian.container.ArchiveDeployer.deployInternal(ArchiveDeployer.java:77)
	... 103 more
]]>
            </full-stacktrace>
          </exception> <!-- org.jboss.arquillian.container.spi.client.container.DeploymentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testCreateBook()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testCreateBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateBook -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testCreateBook() throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testUpdateBook() throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testUpdateBook()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testUpdateBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateBook -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testBulkDelete() throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testBulkDelete()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testBulkDelete" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBulkDelete -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testDeleteBook() throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testDeleteBook()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testDeleteBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteBook -->
        <test-method status="SKIP" signature="testNegativeDeleteBook(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testNegativeDeleteBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeDeleteBookDataProvider" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDeleteBook -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testNegativeDeleteBook(java.lang.String) throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.BookManagerTest.testNegativeDeleteBook(java.lang.String) throws com.softserveinc.booklibrary.exception.BookManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testNegativeDeleteBook(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testNegativeDeleteBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeDeleteBookDataProvider" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SomeNotPresentID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDeleteBook -->
        <test-method status="SKIP" signature="testNegativeCreateBook(com.softserveinc.booklibrary.model.entity.Book)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testNegativeCreateBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeCreateBookDataProvider" depends-on-methods="com.softserveinc.booklibrary.test.manager.BookManagerTest.testCreateBook" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BookManagerTest.testNegativeCreateBook(com.softserveinc.booklibrary.model.entity.Book)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BookManagerTest.testNegativeCreateBook(com.softserveinc.booklibrary.model.entity.Book)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeCreateBook -->
        <test-method status="SKIP" signature="testNegativeUpdateBook(java.lang.Object)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="testNegativeUpdateBook" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeUpdateBookDataProvider" depends-on-methods="com.softserveinc.booklibrary.test.manager.BookManagerTest.testUpdateBook" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method BookManagerTest.testNegativeUpdateBook(java.lang.Object)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method BookManagerTest.testNegativeUpdateBook(java.lang.Object)[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeUpdateBook -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:com.softserveinc.booklibrary.test.manager.BookManagerTest@3f4fceb7]" name="arquillianAfterClass" is-config="true" duration-ms="45" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- com.softserveinc.booklibrary.test.manager.BookManagerTest -->
      <class name="com.softserveinc.booklibrary.test.manager.AuthorManagerTest">
        <test-method status="SKIP" signature="arquillianBeforeClass()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testCreateAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testCreateAuthor" duration-ms="1" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateAuthor -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testCreateAuthor() throws com.softserveinc.booklibrary.exception.AuthorManagerException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="testDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testDeleteAuthor" duration-ms="0" depends-on-groups="createAuthor" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods in group "createAuthor"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods in group "createAuthor"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAuthor -->
        <test-method status="SKIP" signature="testNegativeCreateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeCreateAuthor" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeCreateAuthorDataProvider" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testCreateAuthor" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testNegativeCreateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testNegativeCreateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeCreateAuthor -->
        <test-method status="SKIP" signature="testNegativeDeleteAuthor(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeDeleteAuthor" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeDeleteAuthorDataProvider" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testDeleteAuthor" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testNegativeDeleteAuthor(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testNegativeDeleteAuthor(java.lang.String)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDeleteAuthor -->
        <test-method status="SKIP" signature="testNegativeDeleteAuthorWithNoBooks()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeDeleteAuthorWithNoBooks" duration-ms="0" started-at="2016-02-12T11:37:39Z" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testDeleteAuthor" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testNegativeDeleteAuthorWithNoBooks()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testNegativeDeleteAuthorWithNoBooks()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeDeleteAuthorWithNoBooks -->
        <test-method status="SKIP" signature="testBulkDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testBulkDeleteAuthor" duration-ms="0" started-at="2016-02-12T11:37:39Z" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testNegativeDeleteAuthorWithNoBooks" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testBulkDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testBulkDeleteAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBulkDeleteAuthor -->
        <test-method status="SKIP" signature="testNegativeBulkDeleteAuthors()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeBulkDeleteAuthors" duration-ms="0" started-at="2016-02-12T11:37:39Z" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testBulkDeleteAuthor" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testNegativeBulkDeleteAuthors()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testNegativeBulkDeleteAuthors()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeBulkDeleteAuthors -->
        <test-method status="SKIP" signature="testUpdateAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testUpdateAuthor" duration-ms="0" depends-on-groups="updateAuthor" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testUpdateAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods in group "updateAuthor"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testUpdateAuthor()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods in group "updateAuthor"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateAuthor -->
        <test-method status="SKIP" signature="testNegativeUpdateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="testNegativeUpdateAuthor" duration-ms="0" started-at="2016-02-12T11:37:39Z" data-provider="negativeUpdateAuthorDataProvider" depends-on-methods="com.softserveinc.booklibrary.test.manager.AuthorManagerTest.testUpdateAuthor" finished-at="2016-02-12T11:37:39Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method AuthorManagerTest.testNegativeUpdateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method AuthorManagerTest.testNegativeUpdateAuthor(com.softserveinc.booklibrary.model.entity.Author)[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeUpdateAuthor -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:com.softserveinc.booklibrary.test.manager.AuthorManagerTest@7f53a83]" name="arquillianAfterClass" is-config="true" duration-ms="0" started-at="2016-02-12T11:37:39Z" finished-at="2016-02-12T11:37:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
      </class> <!-- com.softserveinc.booklibrary.test.manager.AuthorManagerTest -->
    </test> <!-- managers -->
  </suite> <!-- BookLibrary-cdiTest -->
</testng-results>
